TITLE Mod file for component: Component(id=iaf type=iafCell)

COMMENT

    This NEURON file has been generated by org.neuroml.export (see https://github.com/NeuroML/org.neuroml.export)
         org.neuroml.export  v1.9.1
         org.neuroml.model   v1.9.1
         jLEMS               v0.10.8

ENDCOMMENT

NEURON {
    POINT_PROCESS iaf
    
    
    NONSPECIFIC_CURRENT i                   : To ensure v of section follows v_I
    RANGE leakConductance                   : parameter
    RANGE leakReversal                      : parameter
    RANGE thresh                            : parameter
    RANGE reset                             : parameter
    RANGE C                                 : parameter
    RANGE iSyn                              : exposure
    RANGE iMemb                             : exposure
    
}

UNITS {
    
    (nA) = (nanoamp)
    (uA) = (microamp)
    (mA) = (milliamp)
    (A) = (amp)
    (mV) = (millivolt)
    (mS) = (millisiemens)
    (uS) = (microsiemens)
    (nF) = (nanofarad)
    (molar) = (1/liter)
    (kHz) = (kilohertz)
    (mM) = (millimolar)
    (um) = (micrometer)
    (umol) = (micromole)
    (pC) = (picocoulomb)
    (S) = (siemens)
    
}

PARAMETER {
    
    leakConductance = 2.0E-4 (uS)          : was: 2.0000000000000003E-10 (conductance)
    leakReversal = -70 (mV)                : was: -0.07 (voltage)
    thresh = -55 (mV)                      : was: -0.055 (voltage)
    reset = -70 (mV)                       : was: -0.07 (voltage)
    C = 0.0032 (nF)                        : was: 3.2E-12 (capacitance)
}

ASSIGNED {
    v (mV)
    i (nA)                                 : the point process current 
    
    v_I (mV/ms)                             : for rate of change of voltage 
    iSyn (nA)                               : derived variable
    iMemb (nA)                              : derived variable
    rate_v (mV/ms)
    
}

STATE {
    
}

INITIAL {
    rates()
    rates() ? To ensure correct initialisation.
    
    net_send(0, 1) : go to NET_RECEIVE block, flag 1, for initial state
    
}

BREAKPOINT {
    
    rates()
    
    i = v_I * C
}

NET_RECEIVE(flag) {
    
    if (flag == 1) { : Setting watch for top level OnCondition...
        WATCH (v >  thresh) 1000
    }
    if (flag == 1000) {
    
        v = reset
    
        v_I = 0 : Setting rate of change of v to 0
    }
    if (flag == 1) { : Set initial states
    
        v = leakReversal
    }
    
}

PROCEDURE rates() {
    
    ? DerivedVariable is based on path: synapses[*]/i, on: Component(id=iaf type=iafCell), from synapses; null
    iSyn = 0 ? Was: synapses[*]_i but insertion of currents from external attachments not yet supported ? path based, prefix = 
    
    iMemb = leakConductance  * (  leakReversal   - v) +  iSyn ? evaluable
    rate_v = iMemb  /  C ? Note units of all quantities used here need to be consistent!
    
    v_I = -1 * rate_v
     
    
}

